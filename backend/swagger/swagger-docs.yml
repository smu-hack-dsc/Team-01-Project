tags:
  - name: user
    description: Everything about the users, inclusive of volunteers and volunteer organisations.
  - name: activity
    description: Everything about the activities that volunteer organisations can hold and the volunteers can sign up for.
  - name: signup
    description: Details about the signups between the volunteers and the activity.
  - name: post
    description: Accessing the posts that the users can create, view and delete as part of the community channel.
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Create an user account
      description: Create a new user account for either the volunteer or the volunteer organisation
      operationId: createUser
      requestBody:
          description: 'User account details. Will require name, email, password and role. Required only for user: dateOfBirth. Optional for all: image. Optional for user : skills, interests.'
          content:
            application/json:
              schema:
                type: object
                required: 
                  - name
                  - email
                  - password
                  - role
                properties:
                  name: 
                    type: string
                    example: Alice Tan
                  password:
                    type: string
                    example: 12345678
                  dateOfBirth:
                    type: string
                    format: date
                    example: 2003-10-11
                  email: 
                    type: string
                    example: alice.tan@test.com
                  skills: 
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  interests: 
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                    example: Alice Tan
                  dateOfBirth:
                    type: string
                    format: date
                    example: 2003-10-11
                  email: 
                    type: string
                    example: alice.tan@test.com
                  skills: 
                    type: array
                    items: 
                      type: string
                    example: [english, tutoring]
                  interests: 
                    type: array
                    items:
                      type: string
                    example: [environment, elderly]
                
        '500':
          description: Server error due to duplicate values, invalid input
      security: []
  /user/login:
    post:
      tags:
        - user
      summary: Login to user account
      description: Login to user account using email and password
      operationId: loginUser
      requestBody:
        description: Require the user email and password, not necessary to have role.
        content:
          application/json:
              schema:
                type: object
                required: 
                  - email
                  - password
                properties:
                  email:
                    type: string
                    example: alice.tan@test.com
                  password:
                    type: string
                    example: 12345678
        required: true
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  data: 
                    type: object
                    properties:
                      id:
                        type: string
                        format: mongoose.Types.ObjectId
                        example: 64b656dd46463602c054c2d8
                      name: 
                        type: string
                        example: Alice Tan
                      dateOfBirth:
                        type: string
                        format: date
                        example: 2003-10-11
                      email: 
                        type: string
                        example: alice.tan@test.com
                      skills: 
                        type: array
                        items: 
                          type: string
                        example: [english, tutoring]
                      interests:
                        type: array
                        items:
                          type: string
                        example: [environment, elderly]
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODk2OTI3NzgsImlhdCI6MTY4OTY5MDk3OCwic3ViIjoiNjRiNjU2ZGQ0NjQ2MzYwMmMwNTRjMmQ4In0.Gv_cpcwCE5x4jLQdRWZtzYWq1MUJjI5wf6IXCetBcck
        '400':
          description: BAD_REQUEST
        '404':
          description: NOT_FOUND
      security:
        - bearerAuth: []
  /profile:
    get:
      tags:
        - user
      summary: Find user information by ID
      description: Returns a single user
      operationId: getUserById
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                    example: Alice Tan
                  dateOfBirth:
                    type: string
                    format: date
                    example: 2003-10-11
                  email: 
                    type: string
                    example: alice.tan@test.com
                  skills: 
                    type: array
                    items: 
                      type: string
                    example: [english, tutoring]
                  interests:
                    type: array
                    items:
                      type: string
                    example: [environment, elderly]
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security: 
        - bearerAuth: []
    put:
      tags:
        - user
      summary: Update user information by ID
      description: Returns a single user
      operationId: updateUserById
      requestBody:
        description: 'The edited user account information. Look at register to see what is required and not required. '
        content:
          application/json:
            schema:
              type: object
              required: 
                - name
                - email
                - password
                - role
              properties:
                name: 
                  type: string
                  example: Alice Tan
                password:
                  type: string
                  example: 12345678
                dateOfBirth:
                  type: string
                  format: date
                  example: 2003-10-11
                email: 
                  type: string
                  example: alice.tan@test.com
                skills: 
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
                  example: [english, tutoring]
                interests: 
                  type: array
                  items:
                    type: string
                    enum:
                      - english
                      - chinese
                      - malay
                      - hindi
                      - teaching
                      - caregiving
                  example: [environment, elderly]
        
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  name: 
                    type: string
                    example: Alice Tan
                  dateOfBirth:
                    type: string
                    format: date
                    example: 2003-10-11
                  email: 
                    type: string
                    example: alice.tan@test.com
                  skills: 
                    type: array
                    items: 
                      type: string
                    example: [english, tutoring]
                  interests:
                    type: array
                    items:
                      type: string
                    example: [environment, elderly]
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security: 
        - bearerAuth: []
    delete:
      tags:
        - user
      summary: Delete user information by ID
      description: Deletes a single user
      operationId: deleteUserById
      responses:
        '200':
          description: SUCCESS
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: User not found
      security: 
        - bearerAuth: []
  /activity/:
    get:
      tags: 
        - activity
      summary: Give all the activities that will appear on the default page
      description: The activities shown will have an end date of after today's date, and aligns with the user's interests and skillset
      operationId: getAfterTodayActivities
      responses:
        '200':
          description: a collection of all the activities
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: mongoose.Types.ObjectId
                          example: 64b68d8f22b054f828cb0055
                        activityName:
                          type: string
                          example: Beach Cleaning Event at ECP
                        requiredSkills:
                          type: array
                          items:
                            type: string
                        categories:
                          type: array
                          items:
                            type: string
                          example: [environment]
                        beginDate:
                          type: string
                          format: date
                          example: 2023-08-01
                        endDate: 
                          type: string
                          format: date
                          example: 2023-09-01
                        organiserId:
                          type: string
                          format: mongoose.Types.ObjectId
                          example: 64b656dd46463602c054c2d8
                      
        '400':
          description: Invalid Id
        '401':
          description: Unauthorized
        '404':
          description: Not found
      security: 
        - bearerAuth: []
    post:
      tags:
        - activity
      summary: Create an activity 
      description: To allow the volunteer organisation create an activity
      operationId: createActivity
      requestBody:
        description: The activity details optional description, image
        content:
          application/json:
            schema:
              type: object
              required:
                - activityName
                - beginDate
                - endDate
              properties:
                activityName:
                  type: string
                  example: Beach Cleaning at ECP
                requiredSkills:
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
                  example: [english, tutoring]
                categories:
                  type: array
                  items:
                    type: string
                    enum:
                      - english
                      - chinese
                      - malay
                      - hindi
                      - teaching
                      - caregiving
                  example: [environment, elderly]
                beginDate:
                  type: string
                  format: date
                  example: 2023-08-01
                endDate: 
                  type: string
                  format: date
                  example: 2023-09-01
                organiserId: 
                  type: string
                  format: mongoose.Types.ObjectId
                  example: 64b68d8f22b054f828cb0055
                description: 
                  type: string
                  example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  activityName:
                    type: string
                    example: Beach Cleaning at ECP
                  requiredSkills:
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  categories:
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  beginDate:
                    type: string
                    format: date
                    example: 2023-08-01
                  endDate: 
                    type: string
                    format: date
                    example: 2023-09-01
                  organiserId: 
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  description: 
                    type: string
                    example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        '400':
          description: Invalid
        '401':
          description: Unauthorized
        '404':
          description: Not found
      security:
        - bearerAuth: []
  /activity/filter:
    post:
      tags:
        - activity
      summary: Get information of activities by a group of filters
      description: Get the information of the activities with the user's filters
      operationId: getActivitiesByFilter
      requestBody:
        description: filter information
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                skills:
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
                categories:
                  type: array
                  items:
                    type: string
                    enum:
                      - english
                      - chinese
                      - malay
                      - hindi
                      - teaching
                      - caregiving
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                required:
                  - activityName
                  - beginDate
                  - endDate
                  - organiserId
                properties:
                  activityName:
                    type: string
                    example: Beach Cleaning at ECP
                  requiredSkills:
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  categories:
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  beginDate:
                    type: string
                    format: date
                    example: 2023-08-01
                  endDate: 
                    type: string
                    format: date
                    example: 2023-09-01
                  organiserId: 
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  description: 
                    type: string
                    example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Activty not found
      security:
        - bearerAuth: []
  /activity/{activityId}:
    get:
      tags:
        - activity
      summary: Get information of activity by ID
      description: Get the information of the activity by its ID
      operationId: getActivityById
      parameters:
        - name: activityId
          in: path
          description: ID of activity to delete
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                required:
                  - activityName
                  - beginDate
                  - endDate
                  - organiserId
                properties:
                  activityName:
                    type: string
                    example: Beach Cleaning at ECP
                  requiredSkills:
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  categories:
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  beginDate:
                    type: string
                    format: date
                    example: 2023-08-01
                  endDate: 
                    type: string
                    format: date
                    example: 2023-09-01
                  organiserId: 
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  description: 
                    type: string
                    example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Activty not found
      security:
        - bearerAuth: []
    put:
      tags:
        - activity
      summary: Update information of activity by ID
      description: Update information of one activity by its ID
      operationId: updateActivityByID
      parameters:
        - name: activityId
          in: path
          description: ID of activity to delete
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      requestBody:
        description: The updated information
        content:
          application/json:
            schema:
              type: object
              required:
                - activityName
                - beginDate
                - endDate
              properties:
                activityName:
                  type: string
                  example: Beach Cleaning at ECP
                requiredSkills:
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
                  example: [english, tutoring]
                categories:
                  type: array
                  items:
                    type: string
                    enum:
                      - english
                      - chinese
                      - malay
                      - hindi
                      - teaching
                      - caregiving
                  example: [environment, elderly]
                beginDate:
                  type: string
                  format: date
                  example: 2023-08-01
                endDate: 
                  type: string
                  format: date
                  example: 2023-09-01
                description: 
                  type: string
                  example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activityName:
                    type: string
                    example: Beach Cleaning at ECP
                  requiredSkills:
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  categories:
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  beginDate:
                    type: string
                    format: date
                    example: 2023-08-01
                  endDate: 
                    type: string
                    format: date
                    example: 2023-09-01
                  organiserId: 
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  description: 
                    type: string
                    example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Activty not found
      security:
        - bearerAuth: []
    delete:
      tags:
        - activity
      summary: Delete activity information by ID
      description: Deletes a single activity
      operationId: deleteActivityById
      parameters:
        - name: activityId
          in: path
          description: ID of activity to delete
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: SUCCESS
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Activty not found
      security: 
        - bearerAuth: []
  /activity/vo/{organiserId}:
    get:
      tags:
        - activity
      summary: Get information of activities by organiser ID
      description: Get the information of the activities held by the volunteer organisation with that organiser id
      operationId: getActivitiesById
      parameters:
        - name: organiserId
          in: path
          description: ID of organiser to filter by
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                required:
                  - activityName
                  - beginDate
                  - endDate
                  - organiserId
                properties:
                  activityName:
                    type: string
                    example: Beach Cleaning at ECP
                  categories:
                    type: array
                    items: 
                      type: string
                      enum: 
                        - elderly
                        - environment
                        - children
                        - tutoring
                        - animals
                    example: [english, tutoring]
                  requiredSkills:
                    type: array
                    items:
                      type: string
                      enum:
                        - english
                        - chinese
                        - malay
                        - hindi
                        - teaching
                        - caregiving
                    example: [environment, elderly]
                  beginDate:
                    type: string
                    format: date
                    example: 2023-08-01
                  endDate: 
                    type: string
                    format: date
                    example: 2023-09-01
                  organiserId: 
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  description: 
                    type: string
                    example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Activty not found
      security:
        - bearerAuth: []
  /signup/:
    post:
      tags:
      - signup
      summary: Signup for an acitivity
      description: To signup for an activity with using the volunteer user account
      operationId: createSignup
      requestBody:
        description: The id of the activity that the user wants to sign up for
        content:
          application/json:
              schema:
                type: object
                required: 
                  - activityId
                properties:
                  activityId:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
        required: true
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  user:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b656dd46463602c054c2d8
                  userDetails:
                    type: object
                    properties:
                      acceptanceIndication:
                        type: boolean
                        default: false
                      hoursCompleted:
                        type: integer
                        format: int64
                        default: 0
                      rating:
                        type: integer
                        format: int64
        '400':
          description: BAD_REQUEST
        '404':
          description: NOT_FOUND
      security:
        - bearerAuth: []
  /signup/user:
    get:
      tags:
        - signup
      summary: Signups that the user logged in has
      description: All the activity sign up details that belong to the user
      operationId: getUserSignups
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  user:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b656dd46463602c054c2d8
                  userDetails:
                    type: object
                    properties:
                      acceptanceIndication:
                        type: boolean
                        default: false
                      hoursCompleted:
                        type: integer
                        format: int64
                        default: 0
                      rating:
                        type: integer
                        format: int64
        '400':
          description: BAD_REQUEST
        '404':
          description: NOT_FOUND
      security:
        - bearerAuth: []
  /signup/activity:
    post:
      tags:
        - signup
      summary: Signups that the activity has received
      description: All the activity sign up details that belong under that activity which can only be accessed by the volunteer organisation that is in charge of it
      operationId: getActivitySignups
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activity:
                  type: string
                  format: mongoose.Types.ObjectId
                  example: 64b68d8f22b054f828cb0055
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  user:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b656dd46463602c054c2d8
                  userDetails:
                    type: object
                    properties:
                      acceptanceIndication:
                        type: boolean
                        default: false
                      hoursCompleted:
                        type: integer
                        format: int64
                        default: 0
                      rating:
                        type: integer
                        format: int64
        '400':
          description: BAD_REQUEST
        '404':
          description: NOT_FOUND
      security:
        - bearerAuth: []
  /signup/{signupId}:
    get:
      tags:
        - signup
      summary: Find signup information by ID
      description: Returns a single signup
      operationId: getSignupById
      parameters:
        - name: signupId
          in: path
          description: ID of signup to return
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  user:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b656dd46463602c054c2d8
                  userDetails:
                    type: object
                    properties:
                      acceptanceIndication:
                        type: boolean
                        default: false
                      hoursCompleted:
                        type: integer
                        format: int64
                        default: 0
                      rating:
                        type: integer
                        format: int64
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Signup not found
      security:
        - bearerAuth: []
    put:
      tags:
        - signup
      summary: Update signup information by ID
      description: Updates a single signup
      operationId: updateSignupById
      parameters:
        - name: signupId
          in: path
          description: ID of signup to update
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                activity:
                  type: string
                  format: mongoose.Types.ObjectId
                  example: 64b68d8f22b054f828cb0055
                user:
                  type: string
                  format: mongoose.Types.ObjectId
                  example: 64b656dd46463602c054c2d8
                userDetails:
                  type: object
                  properties:
                    acceptanceIndication:
                      type: boolean
                      default: false
                    hoursCompleted:
                      type: integer
                      format: int64
                      default: 0
                    rating:
                      type: integer
                      format: int64
      responses:
        '200':
          description: SUCCESS
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b68d8f22b054f828cb0055
                  user:
                    type: string
                    format: mongoose.Types.ObjectId
                    example: 64b656dd46463602c054c2d8
                  userDetails:
                    type: object
                    properties:
                      acceptanceIndication:
                        type: boolean
                        default: false
                      hoursCompleted:
                        type: integer
                        format: int64
                        default: 0
                      rating:
                        type: integer
                        format: int64
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Signup not found
      security:
        - bearerAuth: []
    delete:
      tags:
        - signup
      summary: Delete signup information by ID
      description: Deletes a single signup
      operationId: deleteSignupById
      parameters:
        - name: signupId
          in: path
          description: ID of signup to delete
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: SUCCESS
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
        '404':
          description: Signup not found
      security:
        - bearerAuth: []
  /post/:
    get:
      tags: 
        - post
      summary: Get all the latest posts 
      description: Get all the latest posts in order of date descending
      operationId: getsLatestPosts
      responses:
        '200':
          description: Collection of posts
        '400':
          description: Invalid ID supplied
        '401':
          description: Unauthorized
      security:
        - bearerAuth: []
    post:
      tags: 
        - post
      summary: Create a post
      description: Allows the user to create a post
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                postTitle: 
                  type: string
                postContent:
                  type: string
                tags:
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
                imageInfo:
                  type: object
                  properties:
                    imageName:
                      type: string
                    imagePath:
                      type: string
      responses:
        '200':
          description: Success
      security:
        - bearerAuth: []
  /post/communities:
    post:
      tags:
        - post
      summary: get all the posts under a certain tag
      description: define the tag and get all the posts in descending date order
      operationId: getPostByTag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items: 
                    type: string
                    enum: 
                      - elderly
                      - environment
                      - children
                      - tutoring
                      - animals
      responses:
        '200':
          description: success
        '401': 
          description: not authorized
        '404':
          description: tag not found
                  
      security:
        - bearerAuth: []
  
  /post/myposts:
    get:
      tags:
        - post
      summary: get all the posts under the user
      description: find all the posts under the user that is logged in
      operationId: getPostUnderUser
      responses:
        '200':
          description: success
        '401': 
          description: not authorized
        '404':
          description: tag not found
      security:
        - bearerAuth: []
        
  /post/{postId}:
    delete:
      tags:
        - post
      summary: delete the post under the user
      description: delete the post defined by the id of the postId
      operationId: deletePostById
      parameters:
        - name: postId
          in: path
          description: ID of post to delete
          required: true
          schema:
            type: string
            format: mongoose.Types.ObjectId
      responses:
        '200':
          description: success
        '401': 
          description: not authorized
        '404':
          description: tag not found
      security:
        - bearerAuth: []
    
components:
  schemas:
    User:
      type: object
      required:
        - name
        - password
        - email
      properties:
        name: 
          type: string
          example: Alice Tan
        password:
          type: string
          example: 12345678
        dateOfBirth:
          type: string
          format: date
          example: 2003-10-11
        email: 
          type: string
          example: alice.tan@test.com
        interests: 
          type: array
          items:
            type: string
            enum:
              - english
              - chinese
              - malay
              - hindi
              - teaching
              - caregiving
          example: [environment, elderly]
        skills: 
          type: array
          items: 
            type: string
            enum: 
              - elderly
              - environment
              - children
              - tutoring
              - animals
          example: [english, tutoring]
        role:
          type: string
          enum:
            - user
            - volunteerOrg
          example: user
        description:
          type: string
          example: hi i am alice tan
        imageInfo: 
          type: object
          properties:
            imageName:
              type: string
            imagePath:
              type: string
    Activity:
      type: object
      required:
        - activityName
        - beginDate
        - endDate
        - organiserId
      properties:
        activityName:
          type: string
          example: Beach Cleaning at ECP
        requiredSkills:
          type: array
          items: 
            type: string
            enum: 
              - elderly
              - environment
              - children
              - tutoring
              - animals
          example: [english, tutoring]
        categories:
          type: array
          items:
            type: string
            enum:
              - english
              - chinese
              - malay
              - hindi
              - teaching
              - caregiving
          example: [environment, elderly]
        beginDate:
          type: string
          format: date
          example: 2023-08-01
        endDate: 
          type: string
          format: date
          example: 2023-09-01
        organiserId: 
          type: string
          format: mongoose.Types.ObjectId
          example: 64b68d8f22b054f828cb0055
        description: 
          type: string
          example: Beach cleaning event at ECP every saturday morning in August with a tea-time picnic.
        imageInfo:
          type: object
          properties:
            imageName:
              type: string
            imagePath:
              type: string
    Signup:
      type: object
      required:
        - activity
        - user
      properties:
        activity:
          type: string
          format: mongoose.Types.ObjectId
          example: 64b68d8f22b054f828cb0055
        user:
          type: string
          format: mongoose.Types.ObjectId
          example: 64b656dd46463602c054c2d8
        userDetails:
          type: object
          properties:
            acceptanceIndication:
              type: boolean
              default: false
            hoursCompleted:
              type: integer
              format: int64
              default: 0
            rating:
              type: integer
              format: int64
    Post: 
      type: object
      required:
        - user
        - postTitle
        - postContent
      properties:
        user:
          type: string
          format: mongoose.Types.ObjectId
          example: 64b656dd46463602c054c2d8
        postTitle:
          type: string
          example: Beach Cleaning
        postContent:
          type: string
          example: Beach Cleaning at ECP is arguably the best activity i've joined but I would say that you should bring insect repellents as they are not provided
        tags:
          type: array
          items:
            type: string
            enum:
              - english
              - chinese
              - malay
              - hindi
              - teaching
              - caregiving
          example: [environment]
        imageInfo:

          type: object
          properties:
            imageName:
              type: string
            imagePath: 
              type: string
        
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT